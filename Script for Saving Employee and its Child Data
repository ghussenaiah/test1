package com.bcv.kagami;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import javax.annotation.PostConstruct;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRichTextString;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bcv.kagami.core.databinder.repository.GenericDao;
import com.bcv.kagami.core.utils.db.DBUtils;
import com.bcv.kagami.core.validations.exception.app.ApplicationSQLException;
import com.bcv.kagami.core.validations.exception.custom.CustomException;
import com.bcv.kagami.modules.model.Address_197;
import com.bcv.kagami.modules.model.Department_1491474154332;
import com.bcv.kagami.modules.model.Designation_199;
import com.bcv.kagami.modules.model.Employee_204;
import com.bcv.kagami.modules.model.EmploymentType_203;
import com.bcv.kagami.modules.model.FamilyInfo_206;
import com.bcv.kagami.modules.model.OfficialInformation_205;
import com.bcv.kagami.modules.model.PersonalInformation_285;
import com.bcv.kagami.modules.model.Qualification_1658;
import com.bcv.kagami.runtime.verb.create.repository.CreateDAO;
import com.bcv.kagami.runtime.verb.create.service.CreateService;
import com.bcv.kagami.core.databinder.repository.GenericDaoImpl;


import lombok.extern.slf4j.Slf4j;




@Service
@Slf4j
public class Testmain2 {

	
	static int igc=40;
	static int isubgc=00;
	static int isubsubgcounter=00;
	static int itmm=00;
	static boolean flag=true;
	
	@Autowired
	GenericDao genericDao;
	
	
	@Autowired
	GenericDaoImpl GenericDaoImpl;
	
	
	//@PostConstruct
	public void testing(){
		File excel = new File("C:\\Users\\husenaiah\\Desktop\\uuu.xls");
		FileInputStream  ex = null;
		Workbook workbook = null;
		try {
			ex = new FileInputStream(excel);
			InputStream inputStream =
				      new FileInputStream("C:\\Users\\husenaiah\\Desktop\\ToImport-Permanentfffffffffff.xls");
			workbook = WorkbookFactory.create(inputStream);
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		Map<Double,Employee_204> itemgropmm=new HashMap<Double,Employee_204>();
		Map<Double,OfficialInformation_205> itemsubsubgroptt=new HashMap<Double,OfficialInformation_205>();
		Map<String,PersonalInformation_285> itemdetails=new HashMap<String,PersonalInformation_285>();
		
		Map<String,Department_1491474154332> department=new HashMap<String,Department_1491474154332>();
		Map<String,Designation_199> itemdetaildds=new HashMap<String,Designation_199>();
		Map<String,EmploymentType_203> itemsubgroptt=new HashMap<String,EmploymentType_203>();
		//for(int z=0;z<=25;z++){
			
			
			Sheet sheet = workbook.getSheetAt(1);
			String sheetname=	workbook.getSheetName(1);
			System.out.println("sheet no       "+0);
			System.out.println("sheet name      "+sheetname);
			int lastrownumber=0;
	
		   lastrownumber=sheet.getLastRowNum();
		
		   for(int i=1;i<=lastrownumber;i++){
			   
			   System.out.println("row number       "+i);
				System.out.println("sheet no       "+1);
				System.out.println("sheet name      "+sheetname);
				HSSFRow row = (HSSFRow) sheet.getRow(i);
				HSSFCell cell0=row.getCell(0);      //emp no
				HSSFCell cell1=row.getCell(1);      //firstname
				HSSFCell cell3=row.getCell(3);      //lastname
				
			
				HSSFCell cell5=row.getCell(5);     //dataofbirth
				HSSFCell cell7=row.getCell(7);      //uniqueau
				HSSFCell cell8=row.getCell(8);     //phone number1
				
				HSSFCell cell9=row.getCell(9);       //daofjoining 
				HSSFCell cell10=row.getCell(10);     //officialemailid
				
				HSSFCell cell13=row.getCell(13);   //
				
				
				HSSFCell cell18=row.getCell(18);   //address
				HSSFCell cell21=row.getCell(21);   //pincode
				
				HSSFCell cell22=row.getCell(22);     //pasout year
				
				HSSFCell cell23=row.getCell(23);    //name
				HSSFCell cell24=row.getCell(24);    //relationship
				HSSFCell cell25=row.getCell(25);    //contach
			
			
				String itemgroupcode=null;
				try{
					itemgroupcode=cell0.getStringCellValue();
				}catch(Exception e){
					itemgroupcode=String.valueOf(cell0.getNumericCellValue());
				}
				
				//Double gnumber = Double.parseDouble(itemgroupcode);
				String firstname=cell1.getStringCellValue();
				System.out.println("call1");
				String lastname=cell3.getStringCellValue();
				System.out.println("call3");
				
				Date dataofbirth=cell5.getDateCellValue();
				System.out.println("call5");
				
				String uniqueauther=null;
				try{
					uniqueauther=cell7.getStringCellValue();
				}catch(Exception e){
					uniqueauther=String.valueOf(cell7.getNumericCellValue());
				}
				System.out.println("call7");
				Double abcphone1=cell8.getNumericCellValue();
				System.out.println("call8");
				String def=String.valueOf(abcphone1);
				String phone12[]=def.split("\\.");
				
			    Double phone1 = Double.parseDouble(phone12[0]);
				
				/*String address=cell18.getStringCellValue();
				System.out.println("call18");*/
			    Date dateofjoining=cell9.getDateCellValue();
				System.out.println("call9");
				String email=cell10.getStringCellValue();
				System.out.println("call10");
				
				String address=cell18.getStringCellValue();
				System.out.println("call18");
				Double pincodenumber=cell21.getNumericCellValue();
				System.out.println("call21");
				String fff=String.valueOf(pincodenumber);
				String pincode1[]=fff.split("\\.");
				
				 Double pincode = Double.parseDouble(pincode1[0]);
				 
				Date passoutyear=cell22.getDateCellValue();
				System.out.println("call22");
				
				String fname=cell23.getStringCellValue();
				System.out.println("call23");
				String frel=cell24.getStringCellValue();
				System.out.println("call24");
				Double fconn=cell25.getNumericCellValue();
				System.out.println("call25");
			
				String fcon=String.valueOf(fconn);
				
				String contactinfo[]=fcon.split("\\.");
				
				String departmentname=cell13.getStringCellValue();
				
				int firstcol=cell0.getColumnIndex();
				int secondcol=cell1.getColumnIndex();
				
			/*	System.out.println("first col number       "+firstcol);
				System.out.println("second col number       "+secondcol);*/
				long dateInLong=0;
				long joingdate=0;
				
				
		    
				//--------------------------------------------------------------------------------------------
				//ItemGroup
				if(!itemgropmm.containsKey(itemgroupcode))
				{
					
					
					igc++;
					String p=Integer.toString(igc);
					//itemgroupcode=Double.toString(gnumber);
					String a[]=itemgroupcode.split("\\.");
					Employee_204 itemg=new Employee_204();
					
					PersonalInformation_285 persoinfo=new PersonalInformation_285();
					persoinfo.setId(p);
					persoinfo.setDateofBirth(dataofbirth.getTime());
					//persoinfo.setUniqueIdentityNo(uniqueauther);
					persoinfo.setPhoneNumber1(phone1);
					persoinfo.setGenderId("0");
					
					
					Designation_199 des=new Designation_199();
					EmploymentType_203 emptypee=new EmploymentType_203();
					Department_1491474154332 dep=new Department_1491474154332();
					String abc="uu";
					String depq = "select id from student_1 where sname="+abc+"";
					//String depq = "select id from department_1491474154332 where name=:departmentname";
					//String did=GenericDaoImpl.getId(depq);
					
					/*String desiq = "select id from designation_199 where name="+desig+"";
					String desid=GenericDaoImpl.getId(desiq);
					
					String empidq = "select id from employmenttype_203 where name="+emptype+"";
					String emptypeid=GenericDaoImpl.getId(empidq);*/
					
					OfficialInformation_205 off=new OfficialInformation_205();
					off.setId(p);
					off.setDepartmentId("21");
					off.setDesignationId("30");
					//off.setEmployementTypeId(emptypeid);
					off.setDoj(dateofjoining.getTime());
					//off.setOfficialEmailID(email);
					Set<Address_197> Address_197 = new HashSet<>();
					Address_197 add=new Address_197();
					add.setId(p);
					add.setAddress(address);
					add.setPincode(pincode);
					Address_197.add(add);
					Set<Qualification_1658> Qualification_1658 = new HashSet<>();
					Qualification_1658 qq=new Qualification_1658();
					qq.setId(p);
					qq.setPassOutYear(passoutyear.getTime());
					Qualification_1658.add(qq);
					Set<FamilyInfo_206> FamilyInfo_206 = new HashSet<>();
					
					FamilyInfo_206 ff=new FamilyInfo_206();
					ff.setId(p);
					ff.setContactNo(contactinfo[0]);
					ff.setName(fname);
				    ff.setRelationship(frel);
				    FamilyInfo_206.add(ff);
					itemg.setId(p);
					itemg.setEmployeeNo(itemgroupcode);
					itemg.setFirstName(firstname);
					itemg.setLastName(lastname);
					itemg.setPersonalInformation_285(persoinfo);
					itemg.setOfficialInformation_205(off);
					itemg.setAddress_197(Address_197);
					itemg.setFamilyInfo_206(FamilyInfo_206);
					itemg.setQualification_1658(Qualification_1658);
					
					try {
						Object kk=genericDao.save(itemg);
					} catch (CustomException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			
		
}
		//}
		}
	}
	
	  <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>3.10-FINAL</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <version>3.5-beta5</version>
</dependency>
