package com.bcv.kagami;



import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRichTextString;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bcv.kagami.db.connector.DBConnectionFactory;
import com.bcv.kagami.db.connector.DBConnectionManager;
import com.bcv.kagami.db.entities.User;




@Service
public class Testmain2 {

	
	static int igc=40;
	static int isubgc=00;
	static int isubsubgcounter=00;
	static int itmm=00;
	static boolean flag=true;
	
	
	
	@Autowired
	DBConnectionManager dBConnectionManager;
	
	
	//@PostConstruct
	public void testing(){
	
		
		File excel = new File("C:\\Users\\husenaiah\\Desktop\\switch.xls");
		FileInputStream  ex = null;
		Workbook workbook = null;
		try {
			ex = new FileInputStream(excel);
			InputStream inputStream =
				      new FileInputStream("C:\\Users\\husenaiah\\Desktop\\switch.xls");
			workbook = WorkbookFactory.create(inputStream);
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		
		//for(int z=0;z<=25;z++){
			
			Sheet sheet = workbook.getSheetAt(0);
			String sheetname=	workbook.getSheetName(0);
			System.out.println("sheet no       "+0);
			System.out.println("sheet name      "+sheetname);
			int lastrownumber=0;
	
		   lastrownumber=sheet.getLastRowNum();
		   DBConnectionFactory dao = dBConnectionManager.getConnection();
		   for(int i=1;i<=lastrownumber;i++){
			   
			   System.out.println("row number       "+i);
				System.out.println("sheet no       "+1);
				System.out.println("sheet name      "+sheetname);
				HSSFRow row = (HSSFRow) sheet.getRow(i);
				HSSFCell cell0=row.getCell(0);      //useremail
				HSSFCell cell1=row.getCell(1);      //userid
				String useremail=null;
				try{
					useremail=cell0.getStringCellValue();
				}catch(Exception e){
					useremail=String.valueOf(cell0.getNumericCellValue());
				}
			String userid=null;
				try{
					userid=cell1.getStringCellValue();
				}catch(Exception e){
					userid=String.valueOf(cell1.getNumericCellValue());
					BigDecimal bd = new BigDecimal(userid);
		 		     long lonVal = bd.longValue();
		 		   
			
		 		    userid = new String(Long.toString(lonVal).trim());
					/*Double gnumber = Double.parseDouble(userid);
					String fcon=String.valueOf(gnumber);
					
					String contactinfo[]=fcon.split("\\.");
					userid=contactinfo[0];*/
				}
				
		
					User user=new User();
					user.setUserId(userid);
					user.setUserName(userid);
					user.setUserdomain("kagami-generated_hrms_group_new_copy_copy");
					user.setUserEmail(useremail);
					user.setPassword("gjZ6JQEtS1ZNRYuiQUaLLg==");
					try {
						dao.saveUser(user);
					} catch (Exception e) {
						// TODO Auto-generated catch block
						System.out.println(e.getMessage());
						continue;
						
					}
				
			
		
}
	
		}
	}

  <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>3.10-FINAL</version>
    </dependency>
<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
<dependency>
    <groupId>org.apache.poi</groupId>
    <artifactId>poi-ooxml</artifactId>
    <version>3.5-beta5</version>
</dependency>
